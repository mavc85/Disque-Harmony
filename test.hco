{
  "nstates": 2,
  "hvm": {
    "modules": {
        "__main__": {
            "file": "test.hny",
            "lines": [
                "import lists",
                "import disque",
                "",
                "# d = disque.Disque()",
                "",
                "d = []",
                "",
                "# print(d)",
                "",
                "disque.insert(d,4)",
                "",
                "# x = [3,2,1]",
                "# x = (4,)+x",
                "print(d)"
              ],
            "identifiers": {
                "d": "global",
                "disque": "module",
                "this": "local-var",
                "lists": "module",
                "___": "___"
              }
          },
        "disque": {
            "file": "disque.hny",
            "lines": [
                "import lists",
                "",
                "def Disque() returns d:",
                "  d = []",
                "  ",
                "",
                "",
                "def insert(d,v):",
                "  atomically !d = (v,) + (2,)",
                "    ",
                "",
                "",
                "def delete(d) returns result:",
                "  atomically: ",
                "    if len(d) == 0:",
                "      result = None",
                "    else: ",
                "      result = (!d)[0]  ",
                "      del (!d)[0] ",
                "",
                "def next(d) returns result:",
                "  atomically: ",
                "    if len(d) == 0:",
                "      result = None",
                "    else:",
                "      result = (!d)[0]",
                "      !d = lists.subseq(d,1,len(d)) + (result,)",
                ""
              ],
            "identifiers": {
                "d": "local-const",
                "this": "local-var",
                "v": "local-const",
                "Disque": "constant",
                "next": "constant",
                "delete": "constant",
                "lists": "module",
                "___": "___",
                "insert": "constant"
              }
          },
        "lists": {
            "file": "C:\\Users\\mavc2\\AppData\\Roaming\\Python\\Python38\\site-packages\\harmony_model_checker\\modules\\lists.hny",
            "lines": [
                "# return s[b:e]",
                "def subseq(s, b, e) returns result:",
                "    result = [ s[x] for x in {b..e-1} ]",
                "",
                "def append(s, e) returns result:",
                "    result = s + [e,]",
                "",
                "def head(s) returns result:",
                "    result = s[0]",
                "",
                "def tail(s) returns result:",
                "    result = s",
                "    del result[0]",
                "",
                "# convert values of a dictionary into a list",
                "def values(d) returns result:",
                "    result = [ v for _:v in d ]",
                "",
                "# like Python .items()",
                "def items(d) returns result:",
                "    result = [ (k, v) for k:v in d ]",
                "",
                "# quicksort of a list",
                "def qsort(a) returns sorted_list:",
                "    if a == []:",
                "        sorted_list = []",
                "    else:",
                "        let (pivot, rest) = head(a), tail(a)",
                "        let lower = [ v for v in rest where v < pivot ]",
                "        let higher = [ v for v in rest where v >= pivot ]:",
                "            sorted_list = qsort(lower) + [pivot,] + qsort(higher)",
                "",
                "# like Python index()",
                "def index(d, e) returns i:",
                "    i = 0",
                "    while d[i] != e:",
                "        i += 1",
                "",
                "# like Python startswith (only defined for strings)",
                "def startswith(d, prefix) returns result:",
                "    result = (len(prefix) <= len(d)) and all(d[i] == prefix[i] for i in { 0 .. len(prefix) - 1 })",
                "",
                "# left fold.  Compute f(f(f(z, d[0]), d[1]), d[2] ...)",
                "def foldl(d, f, z) returns result:",
                "    result = z",
                "    for e in d:",
                "        result = f(result, e)",
                "",
                "# right fold.  Compute f(d[0], f(d[1], ..., f(d[n-1], z)))",
                "def foldr(d, f, z) returns result:",
                "    result = z if len d == 0 else f(d[0], foldr(tail(d), f, z))",
                "",
                "# Python functools reduce operator",
                "def reduce(f, d, z) returns result:",
                "    result = foldl(d, f, z)",
                "",
                "# Return a permutation of set s",
                "def permuted(s) returns perm:",
                "    perm = []",
                "    var c = s",
                "    while c != {}:",
                "        let e = choose c:",
                "            perm += [ e, ]",
                "            c -= { e }",
                "",
                "# Return a list of elements satisfying the condition",
                "def filter(cond, s) returns t:",
                "    t = [ e for e in s where cond(e) ]",
                "",
                "# Return a list of elements mapped by f",
                "def map(f, s) returns t:",
                "    t = [ f(e) for e in s ]"
              ],
            "identifiers": {
                "f": "local-const",
                "z": "local-const",
                "filter": "constant",
                "d": "local-const",
                "head": "constant",
                "x": "local-const",
                "higher": "local-const",
                "i": "local-const",
                "startswith": "constant",
                "foldl": "constant",
                "values": "constant",
                "k": "local-const",
                "e": "local-const",
                "map": "constant",
                "qsort": "constant",
                "pivot": "local-const",
                "a": "local-const",
                "c": "local-var",
                "rest": "local-const",
                "b": "local-const",
                "permuted": "constant",
                "this": "local-var",
                "v": "local-const",
                "prefix": "local-const",
                "subseq": "constant",
                "cond": "local-const",
                "s": "local-const",
                "lower": "local-const",
                "reduce": "constant",
                "tail": "constant",
                "___": "___",
                "items": "constant",
                "foldr": "constant",
                "index": "constant",
                "append": "constant"
              }
          }
      },
    "labels": {
        "__end__": 529
      },
    "pretty": [
        [
            "Frame __init__()",
            "start of method __init__"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame subseq(s, b, e)",
            "start of method subseq"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu3",
            "initialize accumulator for list comprehension: pop a value and store in $accu3"
          ],
        [
            "LoadVar b",
            "push the value of b"
          ],
        [
            "DelVar b",
            "delete method variable b"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(x)",
            "get next element and assign to x; push False or True depending on success"
          ],
        [
            "JumpCond False 26",
            "check if loop is done: pop a value and jump to 26 if the value is False"
          ],
        [
            "LoadVar $accu3",
            "load accumulator: push the value of $accu3"
          ],
        [
            "DelVar $accu3",
            "delete method variable $accu3"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "LoadVar x",
            "push the value of x"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu3",
            "update accumulator: pop a value and store in $accu3"
          ],
        [
            "Jump 14",
            "set program counter to 14"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "LoadVar $accu3",
            "load final accumulator result: push the value of $accu3"
          ],
        [
            "DelVar $accu3",
            "delete method variable $accu3"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame append(s, e)",
            "start of method append"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame head(s)",
            "start of method head"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame tail(s)",
            "start of method tail"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Push ?result",
            "push constant ?result"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "DelVar [result]",
            "pop an address of a method variable and delete that variable"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame values(d)",
            "start of method values"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu52",
            "initialize accumulator for list comprehension: pop a value and store in $accu52"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(_, v)",
            "get next element and assign to _:v; push False or True depending on success"
          ],
        [
            "DelVar _",
            "delete method variable _"
          ],
        [
            "JumpCond False 83",
            "check if loop is done: pop a value and jump to 83 if the value is False"
          ],
        [
            "LoadVar $accu52",
            "load accumulator: push the value of $accu52"
          ],
        [
            "DelVar $accu52",
            "delete method variable $accu52"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu52",
            "update accumulator: pop a value and store in $accu52"
          ],
        [
            "Jump 73",
            "set program counter to 73"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu52",
            "load final accumulator result: push the value of $accu52"
          ],
        [
            "DelVar $accu52",
            "delete method variable $accu52"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame items(d)",
            "start of method items"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu68",
            "initialize accumulator for list comprehension: pop a value and store in $accu68"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(k, v)",
            "get next element and assign to k:v; push False or True depending on success"
          ],
        [
            "JumpCond False 110",
            "check if loop is done: pop a value and jump to 110 if the value is False"
          ],
        [
            "LoadVar $accu68",
            "load accumulator: push the value of $accu68"
          ],
        [
            "DelVar $accu68",
            "delete method variable $accu68"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu68",
            "update accumulator: pop a value and store in $accu68"
          ],
        [
            "Jump 96",
            "set program counter to 96"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu68",
            "load final accumulator result: push the value of $accu68"
          ],
        [
            "DelVar $accu68",
            "delete method variable $accu68"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame qsort(a)",
            "start of method qsort"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 126",
            "pop a value and jump to 126 if the value is False"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "StoreVar sorted_list",
            "pop a value and store in sorted_list"
          ],
        [
            "Jump 192",
            "set program counter to 192"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "Apply PC(45)",
            "call method PC(45)"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Apply PC(55)",
            "call method PC(55)"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar (pivot, rest)",
            "pop a value and store in (pivot, rest)"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu103",
            "initialize accumulator for list comprehension: pop a value and store in $accu103"
          ],
        [
            "LoadVar rest",
            "push the value of rest"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 153",
            "check if loop is done: pop a value and jump to 153 if the value is False"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "LoadVar pivot",
            "push the value of pivot"
          ],
        [
            "2-ary <",
            "pop 2 values and push the result of applying <"
          ],
        [
            "JumpCond False 139",
            "pop a value and jump to 139 if the value is False"
          ],
        [
            "LoadVar $accu103",
            "load accumulator: push the value of $accu103"
          ],
        [
            "DelVar $accu103",
            "delete method variable $accu103"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu103",
            "update accumulator: pop a value and store in $accu103"
          ],
        [
            "Jump 139",
            "set program counter to 139"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu103",
            "load final accumulator result: push the value of $accu103"
          ],
        [
            "DelVar $accu103",
            "delete method variable $accu103"
          ],
        [
            "StoreVar lower",
            "pop a value and store in lower"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu120",
            "initialize accumulator for list comprehension: pop a value and store in $accu120"
          ],
        [
            "LoadVar rest",
            "push the value of rest"
          ],
        [
            "DelVar rest",
            "delete method variable rest"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 176",
            "check if loop is done: pop a value and jump to 176 if the value is False"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "LoadVar pivot",
            "push the value of pivot"
          ],
        [
            "2-ary >=",
            "pop 2 values and push the result of applying >="
          ],
        [
            "JumpCond False 162",
            "pop a value and jump to 162 if the value is False"
          ],
        [
            "LoadVar $accu120",
            "load accumulator: push the value of $accu120"
          ],
        [
            "DelVar $accu120",
            "delete method variable $accu120"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu120",
            "update accumulator: pop a value and store in $accu120"
          ],
        [
            "Jump 162",
            "set program counter to 162"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "LoadVar $accu120",
            "load final accumulator result: push the value of $accu120"
          ],
        [
            "DelVar $accu120",
            "delete method variable $accu120"
          ],
        [
            "StoreVar higher",
            "pop a value and store in higher"
          ],
        [
            "LoadVar lower",
            "push the value of lower"
          ],
        [
            "DelVar lower",
            "delete method variable lower"
          ],
        [
            "Apply PC(117)",
            "call method PC(117)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar pivot",
            "push the value of pivot"
          ],
        [
            "DelVar pivot",
            "delete method variable pivot"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar higher",
            "push the value of higher"
          ],
        [
            "DelVar higher",
            "delete method variable higher"
          ],
        [
            "Apply PC(117)",
            "call method PC(117)"
          ],
        [
            "3-ary +",
            "pop 3 values and push the result of applying +"
          ],
        [
            "StoreVar sorted_list",
            "pop a value and store in sorted_list"
          ],
        [
            "ReturnOp(sorted_list)",
            "restore caller method state and push sorted_list"
          ],
        [
            "DelVar sorted_list",
            "delete method variable sorted_list"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame index(d, e)",
            "start of method index"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar i",
            "pop a value and store in i"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond False 211",
            "pop a value and jump to 211 if the value is False"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar i",
            "pop a value and store in i"
          ],
        [
            "Jump 198",
            "set program counter to 198"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "ReturnOp(i)",
            "restore caller method state and push i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame startswith(d, prefix)",
            "start of method startswith"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar prefix",
            "push the value of prefix"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "2-ary <=",
            "pop 2 values and push the result of applying <="
          ],
        [
            "JumpCond False 257",
            "pop a value and jump to 257 if the value is False"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu172",
            "initialize accumulator for list comprehension: pop a value and store in $accu172"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "LoadVar prefix",
            "push the value of prefix"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(i)",
            "get next element and assign to i; push False or True depending on success"
          ],
        [
            "JumpCond False 250",
            "check if loop is done: pop a value and jump to 250 if the value is False"
          ],
        [
            "LoadVar $accu172",
            "load accumulator: push the value of $accu172"
          ],
        [
            "DelVar $accu172",
            "delete method variable $accu172"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "LoadVar prefix",
            "push the value of prefix"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu172",
            "update accumulator: pop a value and store in $accu172"
          ],
        [
            "Jump 233",
            "set program counter to 233"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "DelVar prefix",
            "delete method variable prefix"
          ],
        [
            "LoadVar $accu172",
            "load final accumulator result: push the value of $accu172"
          ],
        [
            "DelVar $accu172",
            "delete method variable $accu172"
          ],
        [
            "1-ary all",
            "pop 1 value and push the result of applying all"
          ],
        [
            "Jump 260",
            "set program counter to 260"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar prefix",
            "delete method variable prefix"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame foldl(d, f, z)",
            "start of method foldl"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar z",
            "push the value of z"
          ],
        [
            "DelVar z",
            "delete method variable z"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 285",
            "check if loop is done: pop a value and jump to 285 if the value is False"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 271",
            "set program counter to 271"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame foldr(d, f, z)",
            "start of method foldr"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 301",
            "pop a value and jump to 301 if the value is False"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "LoadVar z",
            "push the value of z"
          ],
        [
            "DelVar z",
            "delete method variable z"
          ],
        [
            "Jump 323",
            "set program counter to 323"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Apply PC(55)",
            "call method PC(55)"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar z",
            "push the value of z"
          ],
        [
            "DelVar z",
            "delete method variable z"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(289)",
            "call method PC(289)"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame reduce(f, d, z)",
            "start of method reduce"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar z",
            "push the value of z"
          ],
        [
            "DelVar z",
            "delete method variable z"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(263)",
            "call method PC(263)"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame permuted(s)",
            "start of method permuted"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "StoreVar perm",
            "pop a value and store in perm"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "StoreVar c",
            "pop a value and store in c"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "JumpCond False 371",
            "pop a value and jump to 371 if the value is False"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "Choose",
            "pop a set value and push one of its elements"
          ],
        [
            "StoreVar e",
            "pop a value and store in e"
          ],
        [
            "LoadVar perm",
            "push the value of perm"
          ],
        [
            "DelVar perm",
            "delete method variable perm"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar perm",
            "pop a value and store in perm"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "StoreVar c",
            "pop a value and store in c"
          ],
        [
            "Jump 348",
            "set program counter to 348"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "ReturnOp(perm)",
            "restore caller method state and push perm"
          ],
        [
            "DelVar perm",
            "delete method variable perm"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame filter(cond, s)",
            "start of method filter"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu292",
            "initialize accumulator for list comprehension: pop a value and store in $accu292"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 396",
            "check if loop is done: pop a value and jump to 396 if the value is False"
          ],
        [
            "LoadVar cond",
            "push the value of cond"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "JumpCond False 381",
            "pop a value and jump to 381 if the value is False"
          ],
        [
            "LoadVar $accu292",
            "load accumulator: push the value of $accu292"
          ],
        [
            "DelVar $accu292",
            "delete method variable $accu292"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu292",
            "update accumulator: pop a value and store in $accu292"
          ],
        [
            "Jump 381",
            "set program counter to 381"
          ],
        [
            "DelVar cond",
            "delete method variable cond"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "LoadVar $accu292",
            "load final accumulator result: push the value of $accu292"
          ],
        [
            "DelVar $accu292",
            "delete method variable $accu292"
          ],
        [
            "StoreVar t",
            "pop a value and store in t"
          ],
        [
            "ReturnOp(t)",
            "restore caller method state and push t"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame map(f, s)",
            "start of method map"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu313",
            "initialize accumulator for list comprehension: pop a value and store in $accu313"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(e)",
            "get next element and assign to e; push False or True depending on success"
          ],
        [
            "JumpCond False 422",
            "check if loop is done: pop a value and jump to 422 if the value is False"
          ],
        [
            "LoadVar $accu313",
            "load accumulator: push the value of $accu313"
          ],
        [
            "DelVar $accu313",
            "delete method variable $accu313"
          ],
        [
            "LoadVar f",
            "push the value of f"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu313",
            "update accumulator: pop a value and store in $accu313"
          ],
        [
            "Jump 410",
            "set program counter to 410"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "DelVar f",
            "delete method variable f"
          ],
        [
            "LoadVar $accu313",
            "load final accumulator result: push the value of $accu313"
          ],
        [
            "DelVar $accu313",
            "delete method variable $accu313"
          ],
        [
            "StoreVar t",
            "pop a value and store in t"
          ],
        [
            "ReturnOp(t)",
            "restore caller method state and push t"
          ],
        [
            "DelVar t",
            "delete method variable t"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame Disque()",
            "start of method Disque"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "StoreVar d",
            "pop a value and store in d"
          ],
        [
            "ReturnOp(d)",
            "restore caller method state and push d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame insert(d, v)",
            "start of method insert"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push 2",
            "push constant 2"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame delete(d)",
            "start of method delete"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 464",
            "pop a value and jump to 464 if the value is False"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push None",
            "push constant None"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 474",
            "set program counter to 474"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Del",
            "pop an address and delete the shared variable at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 514",
            "jump over method definition: set program counter to 514"
          ],
        [
            "Frame next(d)",
            "start of method next"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 489",
            "pop a value and jump to 489 if the value is False"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "Push None",
            "push constant None"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 512",
            "set program counter to 512"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "Push PC(2)",
            "push constant PC(2)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar d",
            "push the value of d"
          ],
        [
            "DelVar d",
            "delete method variable d"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Store d",
            "pop a value and store it in shared variable d"
          ],
        [
            "Push PC(436)",
            "push constant PC(436)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Load d",
            "push value of shared variable d"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push 4",
            "push constant 4"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Load d",
            "push value of shared variable d"
          ],
        [
            "Print",
            "pop a value and add to print history"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ]
      ],
    "locs": [
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                1,
                1,
                14,
                15
              ],
            "line": 1,
            "endcolumn": 15,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                35
              ],
            "line": 2,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                35
              ],
            "line": 2,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 36,
            "column": 34
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 36,
            "column": 31
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 37
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 37,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 3,
            "stmt": [
                3,
                5,
                3,
                39
              ],
            "line": 3,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                6
              ],
            "line": 4,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                32
              ],
            "line": 5,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                32
              ],
            "line": 5,
            "endcolumn": 32,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 20,
            "column": 19
          },
        {
            "module": "lists",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "lists",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "lists",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 20,
            "column": 19
          },
        {
            "module": "lists",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 6,
            "stmt": [
                6,
                5,
                6,
                21
              ],
            "line": 6,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                6
              ],
            "line": 7,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                27
              ],
            "line": 8,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                27
              ],
            "line": 8,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 17,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 17,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                17
              ],
            "line": 9,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                6
              ],
            "line": 10,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 11,
            "stmt": [
                11,
                1,
                11,
                27
              ],
            "line": 11,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 11,
            "stmt": [
                11,
                1,
                11,
                27
              ],
            "line": 11,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 12,
            "stmt": [
                12,
                5,
                12,
                14
              ],
            "line": 12,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 12,
            "stmt": [
                12,
                5,
                12,
                14
              ],
            "line": 12,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 12,
            "stmt": [
                12,
                5,
                12,
                14
              ],
            "line": 12,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 12,
            "stmt": [
                12,
                5,
                12,
                14
              ],
            "line": 12,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                17
              ],
            "line": 13,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "lists",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                17
              ],
            "line": 13,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                17
              ],
            "line": 13,
            "endcolumn": 17,
            "column": 9
          },
        {
            "module": "lists",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                17
              ],
            "line": 13,
            "endcolumn": 17,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 15,
            "stmt": [
                15,
                45,
                15,
                50
              ],
            "line": 15,
            "endcolumn": 50,
            "column": 45
          },
        {
            "module": "lists",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                29
              ],
            "line": 16,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                29
              ],
            "line": 16,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 29,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                31
              ],
            "line": 17,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 19,
            "stmt": [
                19,
                23,
                19,
                28
              ],
            "line": 19,
            "endcolumn": 28,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 20,
            "stmt": [
                20,
                1,
                20,
                28
              ],
            "line": 20,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 20,
            "stmt": [
                20,
                1,
                20,
                28
              ],
            "line": 20,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 34,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                36
              ],
            "line": 21,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 23,
            "stmt": [
                23,
                22,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 22
          },
        {
            "module": "lists",
            "endline": 24,
            "stmt": [
                24,
                1,
                24,
                33
              ],
            "line": 24,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 24,
            "stmt": [
                24,
                1,
                24,
                33
              ],
            "line": 24,
            "endcolumn": 33,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                15
              ],
            "line": 25,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "lists",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                15
              ],
            "line": 25,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                15
              ],
            "line": 25,
            "endcolumn": 14,
            "column": 8
          },
        {
            "module": "lists",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                15
              ],
            "line": 25,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                24
              ],
            "line": 26,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                24
              ],
            "line": 26,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                24
              ],
            "line": 26,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "lists",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                15
              ],
            "line": 25,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 28,
            "stmt": [
                28,
                9,
                28,
                53
              ],
            "line": 28,
            "endcolumn": 44,
            "column": 29
          },
        {
            "module": "lists",
            "endline": 28,
            "stmt": [
                28,
                9,
                28,
                53
              ],
            "line": 28,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "lists",
            "endline": 28,
            "stmt": [
                28,
                9,
                28,
                53
              ],
            "line": 28,
            "endcolumn": 35,
            "column": 29
          },
        {
            "module": "lists",
            "endline": 28,
            "stmt": [
                28,
                9,
                28,
                53
              ],
            "line": 28,
            "endcolumn": 44,
            "column": 29
          },
        {
            "module": "lists",
            "endline": 28,
            "stmt": [
                28,
                9,
                28,
                53
              ],
            "line": 28,
            "endcolumn": 43,
            "column": 43
          },
        {
            "module": "lists",
            "endline": 28,
            "stmt": [
                28,
                9,
                28,
                53
              ],
            "line": 28,
            "endcolumn": 43,
            "column": 43
          },
        {
            "module": "lists",
            "endline": 28,
            "stmt": [
                28,
                9,
                28,
                53
              ],
            "line": 28,
            "endcolumn": 44,
            "column": 38
          },
        {
            "module": "lists",
            "endline": 28,
            "stmt": [
                28,
                9,
                28,
                53
              ],
            "line": 28,
            "endcolumn": 44,
            "column": 29
          },
        {
            "module": "lists",
            "endline": 28,
            "stmt": [
                28,
                9,
                28,
                53
              ],
            "line": 28,
            "endcolumn": 27,
            "column": 9
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 37,
            "column": 34
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 45,
            "column": 45
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 53,
            "column": 49
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 53,
            "column": 45
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 53,
            "column": 49
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 53,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 29,
            "stmt": [
                29,
                9,
                29,
                64
              ],
            "line": 29,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 38,
            "column": 35
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 38,
            "column": 35
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 55,
            "column": 51
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 55,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 55,
            "column": 51
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 55,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 30,
            "stmt": [
                30,
                9,
                30,
                57
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 9
          },
        {
            "module": "lists",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                65
              ],
            "line": 31,
            "endcolumn": 37,
            "column": 33
          },
        {
            "module": "lists",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                65
              ],
            "line": 31,
            "endcolumn": 37,
            "column": 33
          },
        {
            "module": "lists",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                65
              ],
            "line": 31,
            "endcolumn": 38,
            "column": 27
          },
        {
            "module": "lists",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                65
              ],
            "line": 31,
            "endcolumn": 48,
            "column": 43
          },
        {
            "module": "lists",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                65
              ],
            "line": 31,
            "endcolumn": 47,
            "column": 43
          },
        {
            "module": "lists",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                65
              ],
            "line": 31,
            "endcolumn": 47,
            "column": 43
          },
        {
            "module": "lists",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                65
              ],
            "line": 31,
            "endcolumn": 48,
            "column": 43
          },
        {
            "module": "lists",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                65
              ],
            "line": 31,
            "endcolumn": 64,
            "column": 59
          },
        {
            "module": "lists",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                65
              ],
            "line": 31,
            "endcolumn": 64,
            "column": 59
          },
        {
            "module": "lists",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                65
              ],
            "line": 31,
            "endcolumn": 65,
            "column": 53
          },
        {
            "module": "lists",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                65
              ],
            "line": 31,
            "endcolumn": 65,
            "column": 27
          },
        {
            "module": "lists",
            "endline": 31,
            "stmt": [
                31,
                13,
                31,
                65
              ],
            "line": 31,
            "endcolumn": 25,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 33,
            "stmt": [
                33,
                22,
                33,
                27
              ],
            "line": 33,
            "endcolumn": 27,
            "column": 22
          },
        {
            "module": "lists",
            "endline": 33,
            "stmt": [
                33,
                22,
                33,
                27
              ],
            "line": 33,
            "endcolumn": 27,
            "column": 22
          },
        {
            "module": "lists",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                26
              ],
            "line": 34,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                26
              ],
            "line": 34,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                9
              ],
            "line": 35,
            "endcolumn": 9,
            "column": 9
          },
        {
            "module": "lists",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                9
              ],
            "line": 35,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                20
              ],
            "line": 36,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                20
              ],
            "line": 36,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                20
              ],
            "line": 36,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                20
              ],
            "line": 36,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                20
              ],
            "line": 36,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "lists",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                20
              ],
            "line": 36,
            "endcolumn": 19,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                20
              ],
            "line": 36,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 37,
            "stmt": [
                37,
                9,
                37,
                14
              ],
            "line": 37,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "lists",
            "endline": 37,
            "stmt": [
                37,
                9,
                37,
                14
              ],
            "line": 37,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "lists",
            "endline": 37,
            "stmt": [
                37,
                9,
                37,
                14
              ],
            "line": 37,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 37,
            "stmt": [
                37,
                9,
                37,
                14
              ],
            "line": 37,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "lists",
            "endline": 37,
            "stmt": [
                37,
                9,
                37,
                14
              ],
            "line": 37,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "lists",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                20
              ],
            "line": 36,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 39,
            "stmt": [
                39,
                52,
                39,
                57
              ],
            "line": 39,
            "endcolumn": 57,
            "column": 52
          },
        {
            "module": "lists",
            "endline": 39,
            "stmt": [
                39,
                52,
                39,
                57
              ],
            "line": 39,
            "endcolumn": 57,
            "column": 52
          },
        {
            "module": "lists",
            "endline": 39,
            "stmt": [
                39,
                52,
                39,
                57
              ],
            "line": 39,
            "endcolumn": 57,
            "column": 52
          },
        {
            "module": "lists",
            "endline": 39,
            "stmt": [
                39,
                52,
                39,
                57
              ],
            "line": 39,
            "endcolumn": 57,
            "column": 52
          },
        {
            "module": "lists",
            "endline": 40,
            "stmt": [
                40,
                1,
                40,
                41
              ],
            "line": 40,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 40,
            "stmt": [
                40,
                1,
                40,
                41
              ],
            "line": 40,
            "endcolumn": 41,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 24,
            "column": 19
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 24,
            "column": 19
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 25,
            "column": 15
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 35,
            "column": 30
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 35,
            "column": 15
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 97,
            "column": 15
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 75,
            "column": 75
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 89,
            "column": 84
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 90,
            "column": 80
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 94,
            "column": 94
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 94,
            "column": 80
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 94,
            "column": 75
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 48,
            "column": 48
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 49,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 49,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 59,
            "column": 54
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 61,
            "column": 61
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 61,
            "column": 61
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 62,
            "column": 54
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 62,
            "column": 54
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 62,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 96,
            "column": 96
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 96,
            "column": 46
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 97,
            "column": 42
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 40,
            "column": 38
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 97,
            "column": 15
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 97,
            "column": 15
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 97,
            "column": 15
          },
        {
            "module": "lists",
            "endline": 41,
            "stmt": [
                41,
                5,
                41,
                97
              ],
            "line": 41,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 43,
            "stmt": [
                43,
                55,
                43,
                60
              ],
            "line": 43,
            "endcolumn": 60,
            "column": 55
          },
        {
            "module": "lists",
            "endline": 44,
            "stmt": [
                44,
                1,
                44,
                34
              ],
            "line": 44,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 44,
            "stmt": [
                44,
                1,
                44,
                34
              ],
            "line": 44,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                14
              ],
            "line": 45,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                14
              ],
            "line": 45,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                14
              ],
            "line": 45,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 45,
            "stmt": [
                45,
                5,
                45,
                14
              ],
            "line": 45,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 46,
            "stmt": [
                46,
                5,
                46,
                14
              ],
            "line": 46,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 46,
            "stmt": [
                46,
                5,
                46,
                14
              ],
            "line": 46,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 46,
            "stmt": [
                46,
                5,
                46,
                14
              ],
            "line": 46,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 46,
            "stmt": [
                46,
                5,
                46,
                14
              ],
            "line": 46,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 46,
            "stmt": [
                46,
                5,
                46,
                14
              ],
            "line": 46,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                29
              ],
            "line": 47,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "lists",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                29
              ],
            "line": 47,
            "endcolumn": 28,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                29
              ],
            "line": 47,
            "endcolumn": 25,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                29
              ],
            "line": 47,
            "endcolumn": 25,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                29
              ],
            "line": 47,
            "endcolumn": 28,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                29
              ],
            "line": 47,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "lists",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                29
              ],
            "line": 47,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "lists",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                29
              ],
            "line": 47,
            "endcolumn": 28,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                29
              ],
            "line": 47,
            "endcolumn": 29,
            "column": 18
          },
        {
            "module": "lists",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                29
              ],
            "line": 47,
            "endcolumn": 29,
            "column": 18
          },
        {
            "module": "lists",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                29
              ],
            "line": 47,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "lists",
            "endline": 46,
            "stmt": [
                46,
                5,
                46,
                14
              ],
            "line": 46,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 49,
            "stmt": [
                49,
                59,
                49,
                64
              ],
            "line": 49,
            "endcolumn": 64,
            "column": 59
          },
        {
            "module": "lists",
            "endline": 49,
            "stmt": [
                49,
                59,
                49,
                64
              ],
            "line": 49,
            "endcolumn": 64,
            "column": 59
          },
        {
            "module": "lists",
            "endline": 49,
            "stmt": [
                49,
                59,
                49,
                64
              ],
            "line": 49,
            "endcolumn": 64,
            "column": 59
          },
        {
            "module": "lists",
            "endline": 50,
            "stmt": [
                50,
                1,
                50,
                34
              ],
            "line": 50,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 50,
            "stmt": [
                50,
                1,
                50,
                34
              ],
            "line": 50,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 23,
            "column": 19
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 28,
            "column": 19
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 63,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 35,
            "column": 35
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 62,
            "column": 37
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 37,
            "column": 37
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 40,
            "column": 37
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 40,
            "column": 37
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 62,
            "column": 37
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 61,
            "column": 49
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 54,
            "column": 54
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 54,
            "column": 54
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 55,
            "column": 49
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 61,
            "column": 49
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 58,
            "column": 58
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 58,
            "column": 58
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 61,
            "column": 49
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 61,
            "column": 61
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 61,
            "column": 61
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 61,
            "column": 49
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 62,
            "column": 43
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 62,
            "column": 37
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 63,
            "column": 35
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 63,
            "column": 35
          },
        {
            "module": "lists",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                63
              ],
            "line": 51,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 53,
            "stmt": [
                53,
                35,
                53,
                40
              ],
            "line": 53,
            "endcolumn": 40,
            "column": 35
          },
        {
            "module": "lists",
            "endline": 54,
            "stmt": [
                54,
                1,
                54,
                35
              ],
            "line": 54,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 54,
            "stmt": [
                54,
                1,
                54,
                35
              ],
            "line": 54,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 55,
            "stmt": [
                55,
                5,
                55,
                27
              ],
            "line": 55,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 55,
            "stmt": [
                55,
                5,
                55,
                27
              ],
            "line": 55,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 55,
            "stmt": [
                55,
                5,
                55,
                27
              ],
            "line": 55,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 55,
            "stmt": [
                55,
                5,
                55,
                27
              ],
            "line": 55,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 55,
            "stmt": [
                55,
                5,
                55,
                27
              ],
            "line": 55,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 55,
            "stmt": [
                55,
                5,
                55,
                27
              ],
            "line": 55,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 55,
            "stmt": [
                55,
                5,
                55,
                27
              ],
            "line": 55,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 55,
            "stmt": [
                55,
                5,
                55,
                27
              ],
            "line": 55,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 55,
            "stmt": [
                55,
                5,
                55,
                27
              ],
            "line": 55,
            "endcolumn": 26,
            "column": 26
          },
        {
            "module": "lists",
            "endline": 55,
            "stmt": [
                55,
                5,
                55,
                27
              ],
            "line": 55,
            "endcolumn": 26,
            "column": 26
          },
        {
            "module": "lists",
            "endline": 55,
            "stmt": [
                55,
                5,
                55,
                27
              ],
            "line": 55,
            "endcolumn": 26,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 55,
            "stmt": [
                55,
                5,
                55,
                27
              ],
            "line": 55,
            "endcolumn": 27,
            "column": 14
          },
        {
            "module": "lists",
            "endline": 55,
            "stmt": [
                55,
                5,
                55,
                27
              ],
            "line": 55,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 57,
            "stmt": [
                57,
                32,
                57,
                37
              ],
            "line": 57,
            "endcolumn": 37,
            "column": 32
          },
        {
            "module": "lists",
            "endline": 58,
            "stmt": [
                58,
                1,
                58,
                29
              ],
            "line": 58,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 58,
            "stmt": [
                58,
                1,
                58,
                29
              ],
            "line": 58,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                13
              ],
            "line": 59,
            "endcolumn": 13,
            "column": 12
          },
        {
            "module": "lists",
            "endline": 59,
            "stmt": [
                59,
                5,
                59,
                13
              ],
            "line": 59,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                13
              ],
            "line": 60,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                13
              ],
            "line": 60,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                13
              ],
            "line": 60,
            "endcolumn": 13,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 61,
            "stmt": [
                61,
                5,
                61,
                18
              ],
            "line": 61,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 61,
            "stmt": [
                61,
                5,
                61,
                18
              ],
            "line": 61,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "lists",
            "endline": 61,
            "stmt": [
                61,
                5,
                61,
                18
              ],
            "line": 61,
            "endcolumn": 17,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 61,
            "stmt": [
                61,
                5,
                61,
                18
              ],
            "line": 61,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 62,
            "stmt": [
                62,
                9,
                62,
                24
              ],
            "line": 62,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "lists",
            "endline": 62,
            "stmt": [
                62,
                9,
                62,
                24
              ],
            "line": 62,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "lists",
            "endline": 62,
            "stmt": [
                62,
                9,
                62,
                24
              ],
            "line": 62,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "lists",
            "endline": 63,
            "stmt": [
                63,
                13,
                63,
                26
              ],
            "line": 63,
            "endcolumn": 26,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 63,
            "stmt": [
                63,
                13,
                63,
                26
              ],
            "line": 63,
            "endcolumn": 26,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 63,
            "stmt": [
                63,
                13,
                63,
                26
              ],
            "line": 63,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 63,
            "stmt": [
                63,
                13,
                63,
                26
              ],
            "line": 63,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 63,
            "stmt": [
                63,
                13,
                63,
                26
              ],
            "line": 63,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "lists",
            "endline": 63,
            "stmt": [
                63,
                13,
                63,
                26
              ],
            "line": 63,
            "endcolumn": 26,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 63,
            "stmt": [
                63,
                13,
                63,
                26
              ],
            "line": 63,
            "endcolumn": 19,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                22
              ],
            "line": 64,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                22
              ],
            "line": 64,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                22
              ],
            "line": 64,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                22
              ],
            "line": 64,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                22
              ],
            "line": 64,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                22
              ],
            "line": 64,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "lists",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                22
              ],
            "line": 64,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                22
              ],
            "line": 64,
            "endcolumn": 16,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 61,
            "stmt": [
                61,
                5,
                61,
                18
              ],
            "line": 61,
            "endcolumn": 18,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 66,
            "stmt": [
                66,
                53,
                66,
                58
              ],
            "line": 66,
            "endcolumn": 58,
            "column": 53
          },
        {
            "module": "lists",
            "endline": 66,
            "stmt": [
                66,
                53,
                66,
                58
              ],
            "line": 66,
            "endcolumn": 58,
            "column": 53
          },
        {
            "module": "lists",
            "endline": 66,
            "stmt": [
                66,
                53,
                66,
                58
              ],
            "line": 66,
            "endcolumn": 58,
            "column": 53
          },
        {
            "module": "lists",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                30
              ],
            "line": 67,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 67,
            "stmt": [
                67,
                1,
                67,
                30
              ],
            "line": 67,
            "endcolumn": 30,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 33,
            "column": 30
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 35,
            "column": 35
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 36,
            "column": 30
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 36,
            "column": 30
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 36,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 68,
            "stmt": [
                68,
                5,
                68,
                38
              ],
            "line": 68,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 70,
            "stmt": [
                70,
                40,
                70,
                45
              ],
            "line": 70,
            "endcolumn": 45,
            "column": 40
          },
        {
            "module": "lists",
            "endline": 70,
            "stmt": [
                70,
                40,
                70,
                45
              ],
            "line": 70,
            "endcolumn": 45,
            "column": 40
          },
        {
            "module": "lists",
            "endline": 71,
            "stmt": [
                71,
                1,
                71,
                24
              ],
            "line": 71,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 71,
            "stmt": [
                71,
                1,
                71,
                24
              ],
            "line": 71,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 25,
            "column": 11
          },
        {
            "module": "lists",
            "endline": 72,
            "stmt": [
                72,
                5,
                72,
                27
              ],
            "line": 72,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "lists",
            "endline": 73,
            "stmt": [
                73,
                1,
                73,
                6
              ],
            "line": 73,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "lists",
            "endline": 73,
            "stmt": [
                73,
                1,
                73,
                6
              ],
            "line": 73,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "disque",
            "endline": 3,
            "stmt": [
                3,
                1,
                3,
                23
              ],
            "line": 3,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "disque",
            "endline": 3,
            "stmt": [
                3,
                1,
                3,
                23
              ],
            "line": 3,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "disque",
            "endline": 4,
            "stmt": [
                4,
                3,
                4,
                8
              ],
            "line": 4,
            "endcolumn": 8,
            "column": 7
          },
        {
            "module": "disque",
            "endline": 4,
            "stmt": [
                4,
                3,
                4,
                8
              ],
            "line": 4,
            "endcolumn": 5,
            "column": 3
          },
        {
            "module": "disque",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                6
              ],
            "line": 7,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "disque",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                6
              ],
            "line": 7,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "disque",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                16
              ],
            "line": 8,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "disque",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                16
              ],
            "line": 8,
            "endcolumn": 16,
            "column": 1
          },
        {
            "module": "disque",
            "endline": 9,
            "stmt": [
                9,
                14,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 29,
            "column": 14
          },
        {
            "module": "disque",
            "endline": 9,
            "stmt": [
                9,
                14,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "disque",
            "endline": 9,
            "stmt": [
                9,
                14,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "disque",
            "endline": 9,
            "stmt": [
                9,
                14,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 21,
            "column": 20
          },
        {
            "module": "disque",
            "endline": 9,
            "stmt": [
                9,
                14,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "disque",
            "endline": 9,
            "stmt": [
                9,
                14,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "disque",
            "endline": 9,
            "stmt": [
                9,
                14,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 21,
            "column": 20
          },
        {
            "module": "disque",
            "endline": 9,
            "stmt": [
                9,
                14,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 28,
            "column": 27
          },
        {
            "module": "disque",
            "endline": 9,
            "stmt": [
                9,
                14,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "disque",
            "endline": 9,
            "stmt": [
                9,
                14,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 28,
            "column": 27
          },
        {
            "module": "disque",
            "endline": 9,
            "stmt": [
                9,
                14,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 28,
            "column": 20
          },
        {
            "module": "disque",
            "endline": 9,
            "stmt": [
                9,
                14,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 17,
            "column": 14
          },
        {
            "module": "disque",
            "endline": 9,
            "stmt": [
                9,
                14,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 29,
            "column": 14
          },
        {
            "module": "disque",
            "endline": 12,
            "stmt": [
                12,
                1,
                12,
                6
              ],
            "line": 12,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "disque",
            "endline": 13,
            "stmt": [
                13,
                1,
                13,
                29
              ],
            "line": 13,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "disque",
            "endline": 13,
            "stmt": [
                13,
                1,
                13,
                29
              ],
            "line": 13,
            "endcolumn": 29,
            "column": 1
          },
        {
            "module": "disque",
            "endline": 14,
            "stmt": [
                14,
                3,
                14,
                13
              ],
            "line": 14,
            "endcolumn": 13,
            "column": 3
          },
        {
            "module": "disque",
            "endline": 14,
            "stmt": [
                14,
                3,
                14,
                13
              ],
            "line": 14,
            "endcolumn": 13,
            "column": 3
          },
        {
            "module": "disque",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                19
              ],
            "line": 15,
            "endcolumn": 12,
            "column": 12
          },
        {
            "module": "disque",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                19
              ],
            "line": 15,
            "endcolumn": 13,
            "column": 8
          },
        {
            "module": "disque",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                19
              ],
            "line": 15,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "disque",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                19
              ],
            "line": 15,
            "endcolumn": 18,
            "column": 8
          },
        {
            "module": "disque",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                19
              ],
            "line": 15,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "disque",
            "endline": 16,
            "stmt": [
                16,
                7,
                16,
                19
              ],
            "line": 16,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "disque",
            "endline": 16,
            "stmt": [
                16,
                7,
                16,
                19
              ],
            "line": 16,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "disque",
            "endline": 16,
            "stmt": [
                16,
                7,
                16,
                19
              ],
            "line": 16,
            "endcolumn": 14,
            "column": 7
          },
        {
            "module": "disque",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                19
              ],
            "line": 15,
            "endcolumn": 19,
            "column": 5
          },
        {
            "module": "disque",
            "endline": 18,
            "stmt": [
                18,
                7,
                18,
                22
              ],
            "line": 18,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "disque",
            "endline": 18,
            "stmt": [
                18,
                7,
                18,
                22
              ],
            "line": 18,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "disque",
            "endline": 18,
            "stmt": [
                18,
                7,
                18,
                22
              ],
            "line": 18,
            "endcolumn": 22,
            "column": 16
          },
        {
            "module": "disque",
            "endline": 18,
            "stmt": [
                18,
                7,
                18,
                22
              ],
            "line": 18,
            "endcolumn": 22,
            "column": 16
          },
        {
            "module": "disque",
            "endline": 18,
            "stmt": [
                18,
                7,
                18,
                22
              ],
            "line": 18,
            "endcolumn": 14,
            "column": 7
          },
        {
            "module": "disque",
            "endline": 19,
            "stmt": [
                19,
                7,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "disque",
            "endline": 19,
            "stmt": [
                19,
                7,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "disque",
            "endline": 19,
            "stmt": [
                19,
                7,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "disque",
            "endline": 19,
            "stmt": [
                19,
                7,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 17,
            "column": 11
          },
        {
            "module": "disque",
            "endline": 19,
            "stmt": [
                19,
                7,
                19,
                17
              ],
            "line": 19,
            "endcolumn": 17,
            "column": 7
          },
        {
            "module": "disque",
            "endline": 14,
            "stmt": [
                14,
                3,
                14,
                13
              ],
            "line": 14,
            "endcolumn": 13,
            "column": 3
          },
        {
            "module": "disque",
            "endline": 20,
            "stmt": [
                20,
                1,
                20,
                6
              ],
            "line": 20,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "disque",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                27
              ],
            "line": 21,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "disque",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                27
              ],
            "line": 21,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "disque",
            "endline": 22,
            "stmt": [
                22,
                3,
                22,
                13
              ],
            "line": 22,
            "endcolumn": 13,
            "column": 3
          },
        {
            "module": "disque",
            "endline": 22,
            "stmt": [
                22,
                3,
                22,
                13
              ],
            "line": 22,
            "endcolumn": 13,
            "column": 3
          },
        {
            "module": "disque",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                19
              ],
            "line": 23,
            "endcolumn": 12,
            "column": 12
          },
        {
            "module": "disque",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                19
              ],
            "line": 23,
            "endcolumn": 13,
            "column": 8
          },
        {
            "module": "disque",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                19
              ],
            "line": 23,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "disque",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                19
              ],
            "line": 23,
            "endcolumn": 18,
            "column": 8
          },
        {
            "module": "disque",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                19
              ],
            "line": 23,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "disque",
            "endline": 24,
            "stmt": [
                24,
                7,
                24,
                19
              ],
            "line": 24,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "disque",
            "endline": 24,
            "stmt": [
                24,
                7,
                24,
                19
              ],
            "line": 24,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "disque",
            "endline": 24,
            "stmt": [
                24,
                7,
                24,
                19
              ],
            "line": 24,
            "endcolumn": 14,
            "column": 7
          },
        {
            "module": "disque",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                19
              ],
            "line": 23,
            "endcolumn": 19,
            "column": 5
          },
        {
            "module": "disque",
            "endline": 26,
            "stmt": [
                26,
                7,
                26,
                22
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "disque",
            "endline": 26,
            "stmt": [
                26,
                7,
                26,
                22
              ],
            "line": 26,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "disque",
            "endline": 26,
            "stmt": [
                26,
                7,
                26,
                22
              ],
            "line": 26,
            "endcolumn": 22,
            "column": 16
          },
        {
            "module": "disque",
            "endline": 26,
            "stmt": [
                26,
                7,
                26,
                22
              ],
            "line": 26,
            "endcolumn": 22,
            "column": 16
          },
        {
            "module": "disque",
            "endline": 26,
            "stmt": [
                26,
                7,
                26,
                22
              ],
            "line": 26,
            "endcolumn": 14,
            "column": 7
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 23,
            "column": 12
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 34,
            "column": 25
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 34,
            "column": 25
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 34,
            "column": 25
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 33,
            "column": 33
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 33,
            "column": 33
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 34,
            "column": 29
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 34,
            "column": 25
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 35,
            "column": 12
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 35,
            "column": 12
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 46,
            "column": 40
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 45,
            "column": 40
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 46,
            "column": 40
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 46,
            "column": 12
          },
        {
            "module": "disque",
            "endline": 27,
            "stmt": [
                27,
                7,
                27,
                47
              ],
            "line": 27,
            "endcolumn": 10,
            "column": 7
          },
        {
            "module": "disque",
            "endline": 22,
            "stmt": [
                22,
                3,
                22,
                13
              ],
            "line": 22,
            "endcolumn": 13,
            "column": 3
          },
        {
            "module": "disque",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                6
              ],
            "line": 29,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                6
              ],
            "line": 6,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                6
              ],
            "line": 6,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 13,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 17,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 17,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 17,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                1,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                1,
                14,
                8
              ],
            "line": 14,
            "endcolumn": 7,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                1,
                14,
                8
              ],
            "line": 14,
            "endcolumn": 8,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                15,
                14,
                15
              ],
            "line": 14,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                15,
                14,
                15
              ],
            "line": 14,
            "endcolumn": 15,
            "column": 15
          }
      ],
    "code": [
        {
            "args": "()",
            "name": "__init__",
            "op": "Frame"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "(s, b, e)",
            "name": "subseq",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu3",
            "op": "StoreVar"
          },
        {
            "value": "b",
            "op": "LoadVar"
          },
        {
            "value": "b",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "x",
            "op": "Cut"
          },
        {
            "pc": "26",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu3",
            "op": "LoadVar"
          },
        {
            "value": "$accu3",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "x",
            "op": "LoadVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu3",
            "op": "StoreVar"
          },
        {
            "pc": "14",
            "op": "Jump"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "value": "$accu3",
            "op": "LoadVar"
          },
        {
            "value": "$accu3",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "(s, e)",
            "name": "append",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "s",
            "name": "head",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "s",
            "name": "tail",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "result"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "DelVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "d",
            "name": "values",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu52",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "key": "_",
            "op": "Cut"
          },
        {
            "value": "_",
            "op": "DelVar"
          },
        {
            "pc": "83",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu52",
            "op": "LoadVar"
          },
        {
            "value": "$accu52",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu52",
            "op": "StoreVar"
          },
        {
            "pc": "73",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu52",
            "op": "LoadVar"
          },
        {
            "value": "$accu52",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "d",
            "name": "items",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu68",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "key": "k",
            "op": "Cut"
          },
        {
            "pc": "110",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu68",
            "op": "LoadVar"
          },
        {
            "value": "$accu68",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu68",
            "op": "StoreVar"
          },
        {
            "pc": "96",
            "op": "Jump"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu68",
            "op": "LoadVar"
          },
        {
            "value": "$accu68",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "a",
            "name": "qsort",
            "op": "Frame"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "126",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "sorted_list",
            "op": "StoreVar"
          },
        {
            "pc": "192",
            "op": "Jump"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "45"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "55"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "(pivot, rest)",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu103",
            "op": "StoreVar"
          },
        {
            "value": "rest",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "153",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "pivot",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "<",
            "op": "Nary"
          },
        {
            "pc": "139",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu103",
            "op": "LoadVar"
          },
        {
            "value": "$accu103",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu103",
            "op": "StoreVar"
          },
        {
            "pc": "139",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu103",
            "op": "LoadVar"
          },
        {
            "value": "$accu103",
            "op": "DelVar"
          },
        {
            "value": "lower",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu120",
            "op": "StoreVar"
          },
        {
            "value": "rest",
            "op": "LoadVar"
          },
        {
            "value": "rest",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "176",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "pivot",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": ">=",
            "op": "Nary"
          },
        {
            "pc": "162",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu120",
            "op": "LoadVar"
          },
        {
            "value": "$accu120",
            "op": "DelVar"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu120",
            "op": "StoreVar"
          },
        {
            "pc": "162",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "value": "$accu120",
            "op": "LoadVar"
          },
        {
            "value": "$accu120",
            "op": "DelVar"
          },
        {
            "value": "higher",
            "op": "StoreVar"
          },
        {
            "value": "lower",
            "op": "LoadVar"
          },
        {
            "value": "lower",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "117"
              },
            "op": "Apply"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "pivot",
            "op": "LoadVar"
          },
        {
            "value": "pivot",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "higher",
            "op": "LoadVar"
          },
        {
            "value": "higher",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "117"
              },
            "op": "Apply"
          },
        {
            "arity": 3,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "sorted_list",
            "op": "StoreVar"
          },
        {
            "result": "sorted_list",
            "op": "Return"
          },
        {
            "value": "sorted_list",
            "op": "DelVar"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "(d, e)",
            "name": "index",
            "op": "Frame"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "211",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "i",
            "op": "StoreVar"
          },
        {
            "pc": "198",
            "op": "Jump"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "result": "i",
            "op": "Return"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "(d, prefix)",
            "name": "startswith",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "prefix",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "<=",
            "op": "Nary"
          },
        {
            "pc": "257",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu172",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "prefix",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "Cut"
          },
        {
            "pc": "250",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu172",
            "op": "LoadVar"
          },
        {
            "value": "$accu172",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "prefix",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu172",
            "op": "StoreVar"
          },
        {
            "pc": "233",
            "op": "Jump"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": "prefix",
            "op": "DelVar"
          },
        {
            "value": "$accu172",
            "op": "LoadVar"
          },
        {
            "value": "$accu172",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "all",
            "op": "Nary"
          },
        {
            "pc": "260",
            "op": "Jump"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "prefix",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "(d, f, z)",
            "name": "foldl",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "z",
            "op": "LoadVar"
          },
        {
            "value": "z",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "285",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "271",
            "op": "Jump"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "(d, f, z)",
            "name": "foldr",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "301",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "value": "z",
            "op": "LoadVar"
          },
        {
            "value": "z",
            "op": "DelVar"
          },
        {
            "pc": "323",
            "op": "Jump"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "55"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "z",
            "op": "LoadVar"
          },
        {
            "value": "z",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "289"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "(f, d, z)",
            "name": "reduce",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "z",
            "op": "LoadVar"
          },
        {
            "value": "z",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "263"
              },
            "op": "Apply"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "s",
            "name": "permuted",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "perm",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": "c",
            "op": "StoreVar"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "pc": "371",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "op": "Choose"
          },
        {
            "value": "e",
            "op": "StoreVar"
          },
        {
            "value": "perm",
            "op": "LoadVar"
          },
        {
            "value": "perm",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "perm",
            "op": "StoreVar"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "value": "c",
            "op": "StoreVar"
          },
        {
            "pc": "348",
            "op": "Jump"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "result": "perm",
            "op": "Return"
          },
        {
            "value": "perm",
            "op": "DelVar"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "(cond, s)",
            "name": "filter",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu292",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "396",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "cond",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "pc": "381",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu292",
            "op": "LoadVar"
          },
        {
            "value": "$accu292",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu292",
            "op": "StoreVar"
          },
        {
            "pc": "381",
            "op": "Jump"
          },
        {
            "value": "cond",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "$accu292",
            "op": "LoadVar"
          },
        {
            "value": "$accu292",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "StoreVar"
          },
        {
            "result": "t",
            "op": "Return"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "(f, s)",
            "name": "map",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu313",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "e",
            "op": "Cut"
          },
        {
            "pc": "422",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu313",
            "op": "LoadVar"
          },
        {
            "value": "$accu313",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu313",
            "op": "StoreVar"
          },
        {
            "pc": "410",
            "op": "Jump"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "f",
            "op": "DelVar"
          },
        {
            "value": "$accu313",
            "op": "LoadVar"
          },
        {
            "value": "$accu313",
            "op": "DelVar"
          },
        {
            "value": "t",
            "op": "StoreVar"
          },
        {
            "result": "t",
            "op": "Return"
          },
        {
            "value": "t",
            "op": "DelVar"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "Disque",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "d",
            "op": "StoreVar"
          },
        {
            "result": "d",
            "op": "Return"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "(d, v)",
            "name": "insert",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 2
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "d",
            "name": "delete",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "464",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "address"
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "474",
            "op": "Jump"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Del"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "514",
            "op": "Jump"
          },
        {
            "args": "d",
            "name": "next",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "489",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "address"
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "512",
            "op": "Jump"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "2"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "d",
            "op": "LoadVar"
          },
        {
            "value": "d",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "d"
                  }
              ],
            "op": "Store"
          },
        {
            "value": {
                "type": "pc",
                "value": "436"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "d"
                  }
              ],
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 4
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "op": "Pop"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "d"
                  }
              ],
            "op": "Load"
          },
        {
            "op": "Print"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": "result",
            "op": "DelVar"
          }
      ]
  },
  "issue": "Safety violation",
  "macrosteps": [
    {
      "id": "1",
      "tid": "0",
      "shared": { },
      "name": "__init__()",
      "context": {
        "tid": "0",
        "hvalue": "2621c50186a",
        "fp": "1",
        "id": "0",
        "name": "__init__()",
        "entry": "0",
        "pc": "0",
        "sp": "1",
        "stack": [{ "type": "list", "value": [] }],
        "trace": [
{"pc": "0","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
        ],
        "atomic": "1",
        "next": { "type": "Frame", "name": "__init__", "args": "()", "value": { "type": "list", "value": [] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame __init__()",
          "explain": "pop argument () and run method \"__init__\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "__init__" } ] },
          "npc": "1",
          "fp": "1",
          "trace": [
{"pc": "1","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "0"
        },

        {
          "code": "Jump 514",
          "explain": "jump over method definition: set program counter to 514",
          "explain2": { "text": "jump over method definition: set program counter to 514", "args": [] },
          "npc": "514",
          "push": [ ],
          "pc": "1"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "515",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "514"
        },

        {
          "code": "Store d",
          "explain": "pop value ([]) and store into variable d",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "d" } ] } ] },
          "shared": { "d": { "type": "list", "value": [] } },
          "npc": "516",
          "pop": "1",
          "push": [ ],
          "pc": "515"
        },

        {
          "code": "Push PC(436)",
          "explain": "push program counter constant 436 ()",
          "explain2": { "text": "push program counter constant 436 ()", "args": [ { "type": "atom", "value": "insert" } ] },
          "npc": "517",
          "push": [ { "type": "pc", "value": "436" } ],
          "pc": "516"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "518",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "517"
        },

        {
          "code": "Load d",
          "explain": "push value ([]) of variable d",
          "explain2": { "text": "push value (#+) of variable d", "args": [ { "type": "list", "value": [] } ] },
          "npc": "519",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "518"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ([], []); insert first value into the second; push result ([[]])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "list", "value": [] } ] } ] },
          "npc": "520",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "list", "value": [] } ] } ],
          "pc": "519"
        },

        {
          "code": "Push 4",
          "explain": "push constant 4",
          "explain2": { "text": "push constant 4", "args": [] },
          "npc": "521",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "520"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (4, [[]]); insert first value into the second; push result ([[], 4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "list", "value": [{ "type": "list", "value": [] } ] }, { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "int", "value": "4" } ] } ] },
          "npc": "522",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "int", "value": "4" } ] } ],
          "pc": "521"
        },

        {
          "code": "2-ary Closure",
          "explain": "pop 2 values ([[], 4], PC(436)); push result (?PC(436)[[[], 4]])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "int", "value": "4" } ] }, { "type": "pc", "value": "436" }, { "type": "address", "func": { "type": "pc", "value": "436" }, "args": [{ "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "int", "value": "4" } ] } ] } ] },
          "npc": "523",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "436" }, "args": [{ "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "int", "value": "4" } ] } ] } ],
          "pc": "522"
        },

        {
          "code": "Load",
          "explain": "pop an argument ([[], 4]) and call method (436: \"insert\")",
          "explain2": { "text": "pop an argument (#+) and call method (436: #+)", "args": [ { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "insert" } ] },
          "npc": "436",
          "fp": "4",
          "trace": [
{"pc": "524","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "436","xpc": "436","method_name": { "type": "atom", "value": "insert" },
"method_arg": { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "int", "value": "4" } ] },
"method": "insert([], 4)","calltype": "normal","vars":{ },"sp": 3}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "8370" }, { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "int", "value": "4" } ] } ],
          "pc": "523"
        },

        {
          "code": "Frame insert(d, v)",
          "explain": "pop argument ([[], 4]), assign to (d, v), and run method \"insert\"",
          "explain2": { "text": "pop argument (#+), assign to (d, v), and run method #+", "args": [ { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "insert" } ] },
          "npc": "437",
          "local": { "d": { "type": "list", "value": [] }, "v": { "type": "int", "value": "4" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "436"
        },

        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 1 to 2: remains atomic",
          "explain2": { "text": "increment atomic counter from 1 to 2: remains atomic", "args": [ ] },
          "npc": "438",
          "atomic": "2",
          "push": [ ],
          "pc": "437"
        },

        {
          "code": "LoadVar d",
          "explain": "push value ([]) of variable \"d\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "list", "value": [] }, { "type": "atom", "value": "d" } ] },
          "npc": "439",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "438"
        },

        {
          "code": "DelVar d",
          "explain": "delete method variable d",
          "explain2": { "text": "delete method variable d", "args": [] },
          "npc": "440",
          "local": { "v": { "type": "int", "value": "4" } },
          "push": [ ],
          "pc": "439"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "441",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "440"
        },

        {
          "code": "LoadVar v",
          "explain": "push value (4) of variable \"v\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "v" } ] },
          "npc": "442",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "441"
        },

        {
          "code": "DelVar v",
          "explain": "delete method variable v",
          "explain2": { "text": "delete method variable v", "args": [] },
          "npc": "443",
          "local": { },
          "push": [ ],
          "pc": "442"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (4, []); insert first value into the second; push result ([4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "444",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "443"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "445",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "444"
        },

        {
          "code": "Push 2",
          "explain": "push constant 2",
          "explain2": { "text": "push constant 2", "args": [] },
          "npc": "446",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "445"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, []); insert first value into the second; push result ([2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "447",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "446"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([2], [4]); concatenate the lists; push result ([4, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "2" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "448",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } ],
          "pc": "447"
        },

        {
          "code": "Store",
          "explain": "pop a value and an address and store the value at the address",
          "explain2": { "text": "pop a value and an address and store the value at the address", "args": [] },
          "npc": "448",
          "failure": "Store []: not an address",
          "mode": "failed",
          "pop": "2",
          "push": [ ],
          "pc": "448"
        }

      ],
      "ctxbag": {
          "2621c5019fa": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "2621c5019fa",
          "fp": "4",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "448",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [] }, { "type": "int", "value": "8370" }, { "type": "dict", "value": [] }],
          "trace": [
{"pc": "524","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "448","xpc": "436","method_name": { "type": "atom", "value": "insert" },
"method_arg": { "type": "list", "value": [{ "type": "list", "value": [] }, { "type": "int", "value": "4" } ] },
"method": "insert([], 4)","calltype": "normal","vars":{ },"sp": 3}
          ],
          "failure": "Store []: not an address",
          "this": { "type": "dict", "value": [] },
          "atomic": "2",
          "mode": "failed"
        }
      ]
    }

  ]
}
